{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","setcategories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAC3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OAEE,sBAAMC,SAba,SAACC,GACpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IAC1BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAQhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAlBhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCNdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEKI,MAAMF,GAFX,cAEbG,EAFa,gBAGIA,EAAUC,OAHd,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAYZM,GAZY,4CAAH,sDCCPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAW,yDAAhB,UACI,qBAAKC,IAAMf,EAAKgB,IAAMN,IACtB,4BAAIA,QCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGtB,ECJwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAdAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAACpB,IAGGqB,EDjB0BK,CAAa1B,GAAjCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAIrB,OACI,qCACA,oBAAIJ,UAAU,oDAAd,SAAmEhB,IAClEoB,GAAW,mBAAGJ,UAAU,mDAAb,wBACZ,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAI,SAAAC,GAAG,OAEV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEe3BgB,EA/BM,WAGjB,MAAoCzC,mBAAS,CAAC,gBAA9C,mBAAO0C,EAAP,KAAmBC,EAAnB,KAOA,OACI,qCACI,8CACA,cAAC,EAAD,CAAa5C,cAAe4C,IAC5B,uBAEA,6BAEQD,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CACIA,SAAUA,GADAA,YClBtC8B,IAASC,OACL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.64f909bd.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(inputValue.trim().length>2){\r\n      setCategories(cats => [ inputValue, ...cats ] );\r\n      setInputValue('');\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  return (\r\n\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories : PropTypes.func.isRequired,\r\n}\r\n","\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=iJKyfNmgBSvqmZe7qla35HuYuxjdm5Xi`;\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n    return (\r\n        <div className =\"card animate__animated animate__bounce animate__fadeIn\">\r\n            <img src= {url} alt= {title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React /* ,{ useState, useEffect } */ from 'react'\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__bounce animate__fadeIn\">{category}</h3>\r\n        {loading && <p className=\"animate__animated animate__bounce animate__flash\">Loading...</p>}\r\n        <div className=\"card-grid\">\r\n\r\n            {\r\n                images.map(img =>\r\n\r\n                    <GifGridItem key={img.id} {...img}\r\n                    />\r\n\r\n                )\r\n            }\r\n\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n","\r\nimport /*React,*/ { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n            });\r\n\r\n    }, [category]);\r\n\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n    //const categorias = ['One Punch', 'Samurari X', 'Dragon Ball'];\r\n\r\n    const [categories, setcategories] = useState(['Dragon Ball']);\r\n\r\n\r\n    /*const handleAdd = () =>{\r\n        setcategories([...categories,'HunterXHunter']);\r\n    };*/\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setcategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                        <GifGrid key={category}\r\n                            category={category} />\r\n                    )\r\n\r\n                }\r\n            </ol>\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\n\nReactDOM.render(\n    <GifExpertApp />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}